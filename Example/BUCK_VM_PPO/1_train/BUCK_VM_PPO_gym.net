* c:\Users\kosok\Documents\github\PyTorch2LTspice\Example\BUCK_VM_PPO\1_train\BUCK_VM_PPO_gym.asc
* Generated by LTspice 24.1.9 for Windows.
L1 sw out 250µ Rser=10m
X§X1 pwm N003 sw iGD
R1 N006 0 {ro}
V1 in 0 {vin}
L2 out N006 {Lo} Cpar=1p
X§X4 ctrlclk N001 NNin1 SAMPLEHOLD
X§X5 pwmclk saw SAW params: f={fsw} td=50n
X§X6 saw duty pwm CMP params: hys=100u
X§X7 N010 N012 pwmclk ctrlclk PHASESHIFT2
X§X8 N010 CONST params: K={fsw}
X§X9 N012 CONST params: K=-30
X§X10 ctrlclk NNin1 NNin2 SAMPLEHOLD
X§X11 ctrlclk NNin2 NNin3 SAMPLEHOLD
X§X12 out norm N001 MUL
X§X13 norm CONST params: K={1/vmax}
X§X14 ctrlclk NNin3 NNin4 SAMPLEHOLD
X§X15 ctrlclk NNin4 NNin5 SAMPLEHOLD
X§X16 out ref N004 SUB
X§X17 ctrlclk N005 NNin6 SAMPLEHOLD
X§X18 ctrlclk NNin6 NNin7 SAMPLEHOLD
X§X19 ctrlclk NNin7 NNin8 SAMPLEHOLD
X§X20 N004 norm N005 MUL
X§X21 ctrlclk NNin8 NNin9 SAMPLEHOLD
X§X22 ctrlclk NNin9 NNin10 SAMPLEHOLD
X§X23 ctrlclk duty NNin11 SAMPLEHOLD
X§X24 ctrlclk NNin11 NNin12 SAMPLEHOLD
X§X25 ctrlclk NNin12 NNin13 SAMPLEHOLD
X§X26 ctrlclk NNin13 NNin14 SAMPLEHOLD
X§X27 ctrlclk NNin14 NNin15 SAMPLEHOLD
X§X28 in norm N008 MUL
X§X29 ctrlclk N008 NNin16 SAMPLEHOLD
X§X30 NNin11 NNin12 NNin18 SUB
X§X31 N015 NNin19 N016 SUM
X§X32 ctrlclk N016 NNin19 SAMPLEHOLD
X§X33 NNin6 k N015 MUL
X§X34 k CONST params: K=1
X§X35 ref norm N014 MUL
X§X36 ctrlclk N014 NNin17 SAMPLEHOLD
X§X37 pwmclk NNpwm duty SAMPLEHOLD
X§X38 N002 NNpwm LIMIT params: max=1 min=0
X§X40 N009 CONST params: K={vref}
X§X41 N009 N011 ref MIN
X§X42 N013 N011 SLOPE params: se={vref/5m}
X§X43 N013 TIMER params: T=1u
C1 out 0 220µ V=400 Irms=1.1 Rser=0.2449 Lser=12.918n mfg="W・th Elektronik" pn="861141386015 WCAP-AI3H 35x25" type="Al electrolytic"
X§X3 0 sw iD params: von=1n ron=10m esl=10f rsnb=1k csnb=10p
X§X2 in N003 sw iNMOS params: esl=1f rsnb=1k csnb=10p ron=10m
X§X39 NNout1 N007 N002 SUM
X§U1 ctrlclk N007 sig_gen

* block symbol definitions
.subckt iGD in g s
B1 g s V=IF(V(IN)>0.5,1,0)
.ends iGD

.subckt SAMPLEHOLD CLK IN OUT
R1 o 0 1k
B1 OUT 0 V=V(o)
.machine
.state LO 0
.state LATCH 1
.state HI 2
.rule LO LATCH V(clk)>.5
.rule LATCH HI  V(clk)>.9
.rule * LO V(clk)<.5
.output (o) IF((state==1),V(in),V(out))
.endmachine
.ends SAMPLEHOLD

.subckt SAW clk saw
X§X1 N002 N003 SLOPE params: se={f} vsat=2
X§X2 clk N004 POSEDGE params: td={td}
X§X3 N001 N004 N002 EXOR
X§X4 N001 CONST params: K=1
X§X5 N003 saw LIMIT params: max={vh} min=0
.param f=1Meg
.param td=10n
.param vh=1
.ends SAW

.subckt CMP inn inp out
R1 a 0 1k
A1 a 0 0 0 0 0 out 0 BUF
.machine
.state LO 0
.state HI 1
.rule LO HI V(inp)>(V(inn)+{hys})
.rule HI LO V(inp)<(V(inn)-{hys})
.output (a) state
.endmachine
.param hys=0
.ends CMP

.subckt PHASESHIFT2 freq phase clk1 clk2
C1 a 0 0.5
V2 N001 0 2
B1 N001 a I=IF(V(b),0,V(freq))
B2 a 0 I=IF(V(b),V(freq),0)
R2 b 0 1k
B3 d 0 V=IF(V(phase)>180,180,V(phase))
A1 b 0 0 0 0 clk1 0 0 BUF
R1 c 0 1k
A3 c 0 0 0 0 0 clk2 0 BUF
B4 ph 0 V=IF(V(d)<-180,-180,V(d))/180+1n
.machine
.state LO 0
.state HI 1
.rule LO HI V(a)>(1+1n)
.rule HI LO V(a)<1n
.output (b) state
.endmachine
.ic V(a)=0
.machine
.state LO0a 0
.state LO0b 0
.state LO1a 0
.state LO1b 0
.state HI0a 1
.state HI0b 1
.state HI1a 1
.state HI1b 1
.rule LO0a LO1a V(ph)>=0
.rule LO1a LO0a V(ph)<0
.rule LO1a LO1b V(a)<1n
.rule LO1b HI1a V(a)>V(ph)
.rule HI1a HI1b V(a)>1+1n
.rule HI1b LO1a V(a)<(1-V(ph))
.rule LO0a LO0b V(a)>1+1n
.rule LO0b HI0a V(a)<abs(V(ph))
.rule HI0a HI0b V(a)<1n
.rule HI0b LO0a V(a)>(1-abs(V(ph)))
.output (c) state
.endmachine
.ic V(clk1)=0 V(clk2)=0
.ends PHASESHIFT2

.subckt CONST K
V1 K 0 {K}
.param K=1
.ends CONST

.subckt MUL in1 in2 out
B1 OUT 0 V=V(IN1)*V(IN2)
R1 IN1 0 1Meg
R2 IN2 0 1Meg
.ends MUL

.subckt SUB in1 in2 out
B1 OUT 0 V=V(IN1)-V(IN2)
.ends SUB

.subckt SUM in1 in2 out
B1 OUT 0 V=V(IN1)+V(IN2)
.ends SUM

.subckt LIMIT in out
B1 a 0 V=IF(V(in)>{max},{max},V(in))
B2 out 0 V=IF(V(a)<{min},{min},V(a))
R1 in 0 1Meg
.param max=1
.param min=0
.ends LIMIT

.subckt MIN in1 in2 out
B1 out 0 V=IF(V(in1)<V(in2),V(in1),V(in2))
R1 in1 0 1Meg
R2 in2 0 1Meg
.ends MIN

.subckt SLOPE in out
B2 out 0 V=V(a)
C2 a 0 1m
C1 b a 10p Rser=1k
B1 b 0 V=IF(V(in)>0.5,{vsat}, 0)
D1 a b slope_iD
.param se=1
.param vsat=1000
.machine
.state LO 0
.state HI {se}
.rule LO HI V(in)>0.9
.rule HI LO V(in)<0.6
.output (a) state
.endmachine
.model slope_iD D(Ron=1n Roff=10G Vfwd=1n)
.ends SLOPE

.subckt TIMER out
B1 out 0 V=IF(time>=T,1,0)
.param T=1m
.ends TIMER

.subckt iD AN CA
S1 N001 AN AN N001 SW_iD
R1 CA N002 {rsnb}
C1 N002 AN {csnb}
L1 CA N001 {esl}
.MODEL SW_iD SW (VT={von} RON={ron} ROFF=1G)
.param von=1n
.param ron=10m
.param esl =1f
.param rsnb=1k
.param csnb=10p
.ends iD

.subckt iNMOS D G S
S1 S N001 G S SW_iNMOS
S2 N002 S S N002 SW_iNMOS_D
R1 D N003 {rsnb}
C1 N003 S {csnb}
L1 D N001 {esl}
L2 D N002 {esl}
.MODEL SW_iNMOS SW (VT=0.5 RON={ron} ROFF=100Meg)
.MODEL SW_iNMOS_D SW (VT=1p RON=10u ROFF=100Meg)
.param ron=10m
.param esl=1f
.param rsnb=1k
.param csnb=10p
.ends iNMOS

.subckt POSEDGE in out
A2 0 in 0 N001 0 0 out 0 AND
A1 in 0 0 0 0 N001 0 0 BUF TD={td}
.param td=10n
.ends POSEDGE

.subckt EXOR in1 in2 out
A1 0 in1 0 in2 0 0 out 0 XOR
.ends EXOR

.model D D
.lib C:\Users\kosok\AppData\Local\LTspice\lib\cmp\standard.dio
.tran {(STEPS+2)/fsw}
* Voltage Mode Synchronous Buck Gym
* 2025-06-08
;.param fsw=50k
;.param vin=150
;.param vref=50
;.param ro=80
;.param Lo=20u
;.param vmax=250
;.param STEPS=20
* 150<Vin<250V\n50<Vref<150V\n5<Ro<80Ω\n20<Lo<100uH
* Nerural Network
* IN[1-5]        : Vo/Vmax[t-τ], τ=0,1,3,4\nIN[6-10]      : e/Vmax[t-τ], τ=0,1,3,4\nIN[11-15]    : d[t-τ], τ=0,1,3,4\nIN[16]          : Vin/Vmax[t]\nIN[17]          : Vref/Vmax[t]\nIN[18]          : d[t]-d[t-1]\nIN[19]          : kΣe/Vmax[t]
.options solver="norm"
.options method="gear"
* Soft Start
* Control/PWM Clock
* Voltage Mode Buck
.include BUCK_VM_PPO_param.txt
.lib sig_gen.sp
.backanno
.end
